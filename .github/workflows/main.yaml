name: umleditor-package
on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**.md'
  workflow_dispatch:

jobs:  
  build:
    strategy:
      matrix:
        #os: ['ubuntu-20.04']
        #os: ['macos-12']
        #os: ['windows-2022']
        #os: ['ubuntu-20.04', 'macos-12']
        os: ['ubuntu-20.04', 'macos-12', 'windows-2022']
    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica' 
          java-version: '17'

      - name: Download Umleditor
        run: |
          ./gradlew downloadBindist unzip
          ls -la build/umleditor/
        shell: bash

      - name: Create package
        run: |
          ./gradlew jreleaserAssemble -s
          ls -la build/jreleaser/assemble/app/jlink/
          ls -la build/jreleaser/assemble/umleditor/jpackage/
        shell: bash

      - uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: artifacts
          path: build/jreleaser/assemble/umleditor/jpackage/umleditor*.*

  # release:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Check out repository'
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ steps.head.outputs.content }}
  #         fetch-depth: 0

  #     - name: 'Download all build artifacts'
  #       uses: actions/download-artifact@v2

  #     - name: 'List artifacts'
  #       run: |
  #         ls -la /home/runner/work/ilimanager-native/ilimanager-native/artifacts-native
  #         ls -la /home/runner/work/ilimanager-native/ilimanager-native/
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'liberica' 
  #         java-version: '17'

  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

  #     - name: Release distributions
  #       run: |
  #         ./gradlew -i jreleaserRelease
  #       env:
  #         JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       if: ${{ success() && github.ref != 'refs/heads/main'}}
        
